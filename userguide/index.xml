<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>User guide on Qbec</title>
    <link>http://qbec.io/userguide/</link>
    <description>Recent content in User guide on Qbec</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="http://qbec.io/userguide/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A quick tour of qbec</title>
      <link>http://qbec.io/userguide/tour/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://qbec.io/userguide/tour/</guid>
      <description>Initialize a new qbec app qbec provides an init command to set up a new application. Let&amp;rsquo;s run this and see what happens.
qbec init demo --with-example # --with-example creates a sample &amp;#34;hello&amp;#34; component When the above command runs successfully, it creates a subdirectory called demo that has a single component and environment. The default environment is inferred from the current context in your kube config.
The following files are created in the demo directory:</description>
    </item>
    
    <item>
      <title>Core concepts</title>
      <link>http://qbec.io/userguide/model/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://qbec.io/userguide/model/</guid>
      <description>qbec uses the following concepts.
Components Components are the source code that you write that represent Kubernetes objects. You will typically organize related Kubernetes objects as a single component (e.g. a microservice that needs a service account, deployment, service, and config map kubernetes objects).
Components are loaded from jsonnet, json, or yaml files. Only jsonnet files provide the ability to customize object definitions for different environments. In addition, qbec support loading objects from helm charts, and using jsonnet libraries to produce them.</description>
    </item>
    
  </channel>
</rss>
